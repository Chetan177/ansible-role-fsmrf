---

- name: update apt-cache
  apt: update_cache=yes 

- name:  install build dependencies
  apt: 
    state: latest
    name: ['curl', 'gnupg2', 'wget', 'git', 'cmake', 'automake', 'autoconf', 
        'libtool', 'build-essential', 'pkg-config', 'ca-certificates']

- name: install libtool-bin
  apt: 
    name: libtool-bin 
    state: latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ignore_errors: yes          

- name: install key for source code 
  shell: wget  --no-check-certificate  -O - https://files.freeswitch.org/repo/deb/freeswitch-1.8/fsstretch-archive-keyring.asc | apt-key add -
  args:
    warn: False

- name: update sources 
  shell: |
    echo "deb http://files.freeswitch.org/repo/deb/freeswitch-1.8/ stretch main" > /etc/apt/sources.list.d/freeswitch.list
    echo "deb-src http://files.freeswitch.org/repo/deb/freeswitch-1.8/ stretch main" >> /etc/apt/sources.list.d/freeswitch.list
    exit 0

- name: install freeswitch dependencies
  apt:
    install_recommends: no
    update_cache: yes
    state: build-dep
    name: freeswitch

- name: git configure
  shell: git config --global pull.rebase true

- name: check out freeswitch code
  git: repo=https://freeswitch.org/stash/scm/fs/freeswitch.git
       dest={{freeswitch_sources_path}}
       version=v1.8
       depth=50
       accept_hostkey=yes
       force=yes

- name: check out lws code
  git: repo=https://github.com/warmcat/libwebsockets.git
       dest={{freeswitch_sources_path}}/libs/libwebsockets
       version=v3.1.0
       depth=50
       accept_hostkey=yes
       force=yes

- name: check out drachtio freeswitch modules
  git: repo=https://github.com/davehorton/drachtio-freeswitch-modules.git
       dest=/usr/local/src/drachtio-freeswitch-modules
       depth=50
       accept_hostkey=yes
       force=yes

- name: copy mod_audio_fork into place
  shell: cp -r /usr/local/src/drachtio-freeswitch-modules/modules/mod_audio_fork {{freeswitch_sources_path}}/src/mod/applications/mod_audio_fork
  args:
    warn: False

- name: apply patches to build lws and mod_audio_fork
  patch:
    remote_src: no
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {src: "configure.ac.patch", dest: "{{freeswitch_sources_path}}/configure.ac"}
    - {src: "Makefile.am.patch", dest: "{{freeswitch_sources_path}}/Makefile.am"}
    - {src: "modules.conf.in.patch", dest: "{{freeswitch_sources_path}}/build/modules.conf.in"}
    - {src: "modules.conf.vanilla.xml.patch", dest: "{{freeswitch_sources_path}}/conf/vanilla/autoload_configs/modules.conf.xml"}

- name: build libwebsockets
  shell: mkdir -p build && cd build && cmake .. && make && make install
  args:
    chdir: "{{freeswitch_sources_path}}/libs/libwebsockets"
    warn: False

- include_tasks: grpc.yml 
  when: build_with_grpc|bool
  
- name: bootstrap 
  shell: ./bootstrap.sh -j chdir={{freeswitch_sources_path}}

- name: Freeswitch configuration
  shell: ./{{freeswitch_configure_command}} --with-grpc=yes
  args:
    chdir: "{{freeswitch_sources_path}}"
    warn: False
  when: build_with_grpc|bool

- name: Freeswitch configuration
  shell: ./{{freeswitch_configure_command}}
  args:
    chdir: "{{freeswitch_sources_path}}"
    warn: False
  when: not build_with_grpc|bool


- name: FreeSwitch make
  shell: make chdir={{freeswitch_sources_path}}

- name: FreeSwitch install
  shell: make install chdir={{freeswitch_sources_path}}

- name: make sounds
  shell: cd {{freeswitch_sources_path}} && make cd-sounds-install cd-moh-install 

- name: Copy acl.conf file
  template: src=acl.conf.xml.j2 dest={{freeswitch_path}}conf/autoload_configs/acl.conf.xml owner=root group=root mode=0644

- name: Copy event_socket.conf file
  template: src=event_socket.conf.xml.j2 dest={{freeswitch_path}}conf/autoload_configs/event_socket.conf.xml owner=root group=root mode=0644

- name: Remove unused dialplans and profiles
  file: name={{freeswitch_path}}conf/{{ item }} state=absent
  with_items:
  - sip_profiles/external.xml
  - sip_profiles/external
  - sip_profiles/internal.xml
  - sip_profiles/external-ipv6.xml
  - sip_profiles/external-ipv6
  - sip_profiles/internal-ipv6.xml
  - dialplan/default.xml
  - dialplan/default
  - dialplan/features.xml
  - dialplan/public.xml
  - dialplan/public
  - dialplan/skinny-patterns.xml
  - dialplan/skinny-patterns

- name: Copy dialplan
  template: src=mrf_dialplan.xml.j2 dest={{freeswitch_path}}conf/dialplan/mrf.xml mode=0644

- name: Copy ipv4 sip profile
  template: src=mrf_sip_profile.xml.j2 dest={{freeswitch_path}}conf/sip_profiles/mrf.xml mode=0644

- name: Copy ipv6 sip profile
  template: src=mrf_ipv6_sip_profile.xml.j2 dest={{freeswitch_path}}conf/sip_profiles/mrf_ipv6.xml mode=0644
  when: 
    - hostvars[inventory_hostname]['ansible_default_ipv6']
    - hostvars[inventory_hostname]['ansible_default_ipv6']['address']

- name: unmask freeswitch service
  shell: systemctl unmask freeswitch

- name: install freeswitch.service
  template: src=freeswitch.service.j2 dest=/lib/systemd/system/freeswitch.service

- name: reload systemctl
  shell: systemctl daemon-reload

- name: enable freeswitch service
  service: name=freeswitch state=restarted

- name: log files management
  template: src=freeswitch_log_rotation.j2 dest=/etc/cron.daily/freeswitch_log_rotation

- file: path=/etc/cron.daily/freeswitch_log_rotation mode="a+x"
