---

- name: update apt-cache
  apt: update_cache=yes 

- name:  install build dependencies
  apt: 
    state: latest
    name: ['curl', 'gnupg2', 'wget', 'git', 'cmake', 'automake', 'autoconf', 
        'libtool', 'build-essential', 'pkg-config', 'ca-certificates', 'libssl-dev', 
        'libz-dev', 'libjpeg-dev', 'libsqlite3-dev', 'libcurl4-openssl-dev', 'libpcre3-dev',
        'libspeex-dev', 'libspeexdsp-dev', 'libedit-dev', 'libtiff-dev', 'yasm',
        'libopus-dev', 'libsndfile-dev', 'libshout3-dev', 'libmpg123-dev', 'libmp3lame-dev']

- name: install libtool-bin
  apt: 
    name: libtool-bin 
    state: latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ignore_errors: yes          

- name: install key for source code 
  shell: wget  --no-check-certificate  -O - https://files.freeswitch.org/repo/deb/freeswitch-1.8/fsstretch-archive-keyring.asc | apt-key add -
  args:
    warn: False

- name: update sources 
  shell: |
    echo "deb http://files.freeswitch.org/repo/deb/freeswitch-1.8/ stretch main" > /etc/apt/sources.list.d/freeswitch.list
    echo "deb-src http://files.freeswitch.org/repo/deb/freeswitch-1.8/ stretch main" >> /etc/apt/sources.list.d/freeswitch.list
    exit 0

- name: git configure
  shell: git config --global pull.rebase true

- name: check out freeswitch code
  git: repo=https://freeswitch.org/stash/scm/fs/freeswitch.git
       dest={{freeswitch_sources_path}}
       version={{freeswitch_version}}
       depth=50
       accept_hostkey=yes
       force=yes

- name: check out lws code
  git: repo=https://github.com/warmcat/libwebsockets.git
       dest={{freeswitch_sources_path}}/libs/libwebsockets
       version=v3.1.0
       depth=50
       accept_hostkey=yes
       force=yes

- name: check out drachtio freeswitch modules
  git: repo=https://github.com/davehorton/drachtio-freeswitch-modules.git
       dest=/usr/local/src/drachtio-freeswitch-modules
       depth=50
       accept_hostkey=yes
       force=yes

- name: copy mod_audio_fork into place
  shell: cp -r /usr/local/src/drachtio-freeswitch-modules/modules/mod_audio_fork {{freeswitch_sources_path}}/src/mod/applications/mod_audio_fork
  args:
    warn: False

- name: apply patches to build lws and mod_audio_fork
  patch:
    remote_src: no
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {src: "configure.ac.patch", dest: "{{freeswitch_sources_path}}/configure.ac"}
    - {src: "Makefile.am.patch", dest: "{{freeswitch_sources_path}}/Makefile.am"}
    - {src: "modules.conf.in.patch", dest: "{{freeswitch_sources_path}}/build/modules.conf.in"}

- name: copy vanilla conf
  copy:
    src: modules.conf.vanilla.xml.lws
    dest: "{{freeswitch_sources_path}}/conf/vanilla/autoload_configs/modules.conf.xml"

- name: build libwebsockets
  shell: mkdir -p build && cd build && cmake .. && make && make install
  args:
    chdir: "{{freeswitch_sources_path}}/libs/libwebsockets"
    warn: False

- include_tasks: grpc.yml 
  when: build_with_grpc|bool
  
- name: bootstrap 
  shell: ./bootstrap.sh -j chdir={{freeswitch_sources_path}}

- name: Freeswitch configuration (with grpc)
  shell: ./{{freeswitch_configure_command}} --with-grpc=yes
  args:
    chdir: "{{freeswitch_sources_path}}"
    warn: False
  when: build_with_grpc|bool

- name: Freeswitch configuration (without grpc)
  shell: ./{{freeswitch_configure_command}}
  args:
    chdir: "{{freeswitch_sources_path}}"
    warn: False
  when: not build_with_grpc|bool

- name: FreeSwitch make
  shell: make chdir={{freeswitch_sources_path}}

- name: FreeSwitch install
  shell: make install chdir={{freeswitch_sources_path}}

- name: make sounds
  shell: cd {{freeswitch_sources_path}} && make cd-sounds-install cd-moh-install 

- name: Copy acl.conf file
  template: src=acl.conf.xml.j2 dest={{freeswitch_path}}conf/autoload_configs/acl.conf.xml owner=root group=root mode=0644

- name: Copy event_socket.conf file
  template: src=event_socket.conf.xml.j2 dest={{freeswitch_path}}conf/autoload_configs/event_socket.conf.xml owner=root group=root mode=0644

- name: Remove unused dialplans and profiles
  file: name={{freeswitch_path}}conf/{{ item }} state=absent
  with_items:
  - sip_profiles/external.xml
  - sip_profiles/external
  - sip_profiles/internal.xml
  - sip_profiles/external-ipv6.xml
  - sip_profiles/external-ipv6
  - sip_profiles/internal-ipv6.xml
  - dialplan/default.xml
  - dialplan/default
  - dialplan/features.xml
  - dialplan/public.xml
  - dialplan/public
  - dialplan/skinny-patterns.xml
  - dialplan/skinny-patterns

- name: Copy dialplan
  template: src=mrf_dialplan.xml.j2 dest={{freeswitch_path}}conf/dialplan/mrf.xml mode=0644

- name: Copy ipv4 sip profile
  template: src=mrf_sip_profile.xml.j2 dest={{freeswitch_path}}conf/sip_profiles/mrf.xml mode=0644

- name: Copy ipv6 sip profile
  template: src=mrf_ipv6_sip_profile.xml.j2 dest={{freeswitch_path}}conf/sip_profiles/mrf_ipv6.xml mode=0644
  when: 
    - hostvars[inventory_hostname]['ansible_default_ipv6']
    - hostvars[inventory_hostname]['ansible_default_ipv6']['address']

- name: change rtp-start-port
  lineinfile:
    path: /usr/local/freeswitch/conf/autoload_configs/switch.conf.xml
    regexp: 'rtp-start-port'
    line:  <param name="rtp-start-port" value="{{rtp_start_port}}"/>

- name: change rtp-end-port
  lineinfile:
    path: /usr/local/freeswitch/conf/autoload_configs/switch.conf.xml
    regexp: 'rtp-end-port'
    line:  <param name="rtp-end-port" value="{{rtp_end_port}}"/>

- name: set public IPs (aws)
  block:
  - name: set external_sip_ip
    lineinfile:
      path: /usr/local/freeswitch/conf/vars.xml
      regexp: 'external_sip_ip=stun:stun.freeswitch.org'
      line: <X-PRE-PROCESS cmd="exec-set" data="external_sip_ip=curl -s http://instance-data/latest/meta-data/public-ipv4"/>

  - name: set external_rtp_ip
    lineinfile:
      path: /usr/local/freeswitch/conf/vars.xml
      regexp: 'external_rtp_ip=stun:stun.freeswitch.org'
      line: <X-PRE-PROCESS cmd="exec-set" data="external_rtp_ip=curl -s http://instance-data/latest/meta-data/public-ipv4"/>
  when: cloud_provider == 'aws'

- name: set public IPs (gcp)
  block:
  - name: set external_sip_ip
    lineinfile:
      path: /usr/local/freeswitch/conf/vars.xml
      regexp: 'external_sip_ip=stun:stun.freeswitch.org'
      line: <X-PRE-PROCESS cmd="exec-set" data="external_sip_ip=curl -s -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip"/>

  - name: set external_rtp_ip
    lineinfile:
      path: /usr/local/freeswitch/conf/vars.xml
      regexp: 'external_rtp_ip=stun:stun.freeswitch.org'
      line: <X-PRE-PROCESS cmd="exec-set" data="external_rtp_ip=curl -s -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip"/>
  when: cloud_provider == 'gcp'

- name: set public IPs (azure)
  block:
  - name: set external_sip_ip
    lineinfile:
      path: /usr/local/freeswitch/conf/vars.xml
      regexp: 'external_sip_ip=stun:stun.freeswitch.org'
      line: <X-PRE-PROCESS cmd="exec-set" data="external_sip_ip=curl -H Metadata:true http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01&format=text"/>

  - name: set external_rtp_ip
    lineinfile:
      path: /usr/local/freeswitch/conf/vars.xml
      regexp: 'external_rtp_ip=stun:stun.freeswitch.org'
      line: <X-PRE-PROCESS cmd="exec-set" data="external_rtp_ip=curl -H Metadata:true http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01&format=text"/>
  when: cloud_provider == 'gcp'

- name: bind sip and rtp to cloud IPs
  block:
  - name: bind sip
    lineinfile:
      path: /usr/local/freeswitch/conf/sip_profiles/mrf.xml
      regexp: 'ext-sip-ip'
      line: <param name="ext-sip-ip" value="$${external_sip_ip}"/>
  
  - name: bind rtp
    lineinfile:
      path: /usr/local/freeswitch/conf/sip_profiles/mrf.xml
      regexp: 'ext-rtp-ip'
      line: <param name="ext-rtp-ip" value="$${external_rtp_ip}"/>
  
  when: cloud_provider != 'none' and freeswitch_bind_cloud_ip|bool

- name: unmask freeswitch service
  shell: systemctl unmask freeswitch

- name: install freeswitch.service
  template: src=freeswitch.service.j2 dest=/lib/systemd/system/freeswitch.service

- name: reload systemctl
  shell: systemctl daemon-reload

- name: enable freeswitch service
  service: name=freeswitch state=restarted

- name: log files management
  template: src=freeswitch_log_rotation.j2 dest=/etc/cron.daily/freeswitch_log_rotation

- file: path=/etc/cron.daily/freeswitch_log_rotation mode="a+x"

- name: remove source code
  file: 
    path: "{{ item }}"
    state: absent
  with_items:
    - /usr/local/src/freeswitch
    - /usr/local/src/drachtio-freeswitch-modules
    - /usr/local/src/grpc
    - /usr/local/src/
  when: remove_source|bool
